@import url('https://use.typekit.net/srw5lkl.css') layer(base);
@import 'tailwindcss';

@theme {
  --font-new-zen: new-zen, sans-serif;

  --color-logo-100: #fcf0c2;
  --color-logo-200: #fd7401;
  --color-logo-300: #884e1d;

  --color-beige-50: #fcf9ef;
  --color-beige-100: #f8f3e0;
  --color-beige-200: #f0ebd8;

  --color-behaviorism-100: #f89595;
  --color-behaviorism-200: #b57878;

  --color-gestalt-100: #90bcf0;
  --color-gestalt-200: #709bcc;

  --color-tsc-100: #f3bb8a;
  --color-tsc-200: #bf936d;

  --color-ranking-gold: #ffd777;
  --color-ranking-silver: #92959d;
  --color-ranking-bronze: #d66f4e;

  --color-finished-100: #81de86;
  --color-finished-200: #4a804d;

  --color-warning: #ff3535;

  --shadow-cogtec: 0 4px 4px 0 rgb(0 0 0 / 0.25);

  --drop-shadow-cogtec: 0 4px 4px 0 rgb(0 0 0 / 0.25);

  --breakpoint-proto: 1400px;
}

@layer components {
  .exercise-realm {
    border-radius: calc(infinity * 1px);
    background-color: var(--color-neutral-400);
    cursor: pointer;
    position: relative;
    transform-style: preserve-3d;

    &:hover {
      transform: translate(0, 1px);

      &::before {
        transform: translate3d(0, 2px, -1rem);
      }
    }

    &:active {
      transform: translate(0, 3px);

      &::before {
        transform: translate3d(0, 0px, -1rem);
      }
    }

    &::before {
      background-color: var(--color-neutral-600);
      content: '';
      position: absolute;
      inset: 0;
      border-radius: inherit;
      transform: translate3d(0, 3px, -1rem);
    }

    &[data-realm='behaviorism'] {
      background-color: var(--color-behaviorism-100);

      &::before {
        background-color: var(--color-behaviorism-200);
      }
    }

    &[data-realm='gestalt'] {
      background-color: var(--color-gestalt-100);

      &::before {
        background-color: var(--color-gestalt-200);
      }
    }

    &[data-realm='tsc'] {
      background-color: var(--color-tsc-100);

      &::before {
        background-color: var(--color-tsc-200);
      }
    }

    &[data-completed] {
      background-color: var(--color-finished-100);

      &::before {
        background-color: var(--color-finished-200);
      }
    }

    &:disabled {
      background-color: var(--color-neutral-400);
      pointer-events: none;

      &::before {
        background-color: var(--color-neutral-600);
      }
    }
  }
}
